<% set_page_title "Submissions" %>

<% waiting_verdicts = ['Validating', 'queued', 'received'] %>
<% verdict_class_map = {
  "AC" => "text-success",
  "WA" => "text-danger",
  "TLE" => "text-info",
  "MLE" => "text-mle",
  "OLE" => "text-ole",
  "RE" => "text-warning",
  "SIG" => "text-sig",
  "queued" => "text-muted",
} %>
<% verdict_class_map.default = '' %>
<% waiting_submissions = [] %>

<h4 class="page-header">
  Submissions
  <% if @contest %>
    <small><%= @contest.title %></small>
  <% end %>
  <% if @problem %>
    <small>Problem #<%= @problem.id %></small>
  <% end %>
</h4>

<% if @problem %>
  <% submit_link = contest_adaptive_polymorphic_path([@problem, :submission], action: :new) %>
  <%= link_to 'Submit to Problem', submit_link, class: "btn btn-success btn-xs" %>
<% else %>
  <div class="form-inline">
    <div class="form-group">
      <label for="quick_prob_id">Quick Submit</label>
      <input style="width:150px" id="quick_prob_id" type="number" class="form-control input-sm flat" min="1" max="<%= Problem.count %>" placeholder="Enter Problem ID"/>
    </div>
    <a href="#" id="quick_submit" class="btn btn-success btn-xs">Submit</a>
  </div>
<% end %>

<form class="form-inline" accept-charset="UTF-8" method="get">
  <label for="filter_user">Quick Filter</label>
  <div class="form-group">
    <input id="filter_username" name="filter_username" class="form-control input-sm flat" type="text" placeholder="Enter Username">
  </div>
  <div class="form-group">
    <input id="filter_problem" name="filter_problem" class="form-control input-sm flat" type="number" min="<%= Problem.order(id: :asc).first&.id %>" max="<%= Problem.order(id: :desc).first&.id %>" placeholder="Enter Problem ID">
  </div>
  <div class="form-group">
    <select id="filter_status" name="filter_status[]" class="selectpicker" multiple title="Select Result">
      <option value="AC">Accepted</option>
      <option value="WA">Wrong Answer</option>
      <option value="TLE">Time Limit Exceeded</option>
      <option value="MLE">Memory Limit Exceeded</option>
      <option value="OLE">Output Limit Exceeded</option>
      <option value="RE">Runtime Error</option>
      <option value="SIG">Runtime Error (signal)</option>
      <option value="CE">Compilation Error</option>
    </select>
  </div>
  <div class="form-group">
    <select id="filter_compiler" name="filter_compiler[]" class="selectpicker" multiple="multiple" title="Select Compiler">
      <% Compiler.order(order: :asc).all.each do |x| %>
        <option value="<%= x.id %>"><%= x.name %></option>
      <% end %>
    </select>
  </div>
  <button type="submit" id="quick_filter" class="btn btn-inverse btn-xs">Filter</button>
</form>

<script>
$(".selectpicker").selectpicker({style: "form-control input-sm flat"});
$("button:not([type='submit'])").attr("type", "button");
</script>

<table class='table table-hover table-striped'>
  <thead>
    <tr>
      <th>#</th>
      <th>PID</th>
      <% if @layout != :single_contest %>
        <th>Submitter</th>
      <% end %>
      <th>Time</th>
      <th>Memory</th>
      <th>Verdict</th>
      <th>Compiler</th>
      <th>Code Length</th>
      <th>Score</th>
      <th>Submit Time</th>
      <% if effective_admin? %>
         <th></th>
      <% end %>
    </tr>
  </thead>
  <tbody>
    <% @submissions.each do |submission| %>
      <tr>
        <% waiting_submissions.append(submission.id) if waiting_verdicts.include?(submission.result) %>
        <td><%= link_to submission.id, contest_adaptive_polymorphic_path([submission]) %></td>
        <td><%= link_to submission.problem_id, contest_adaptive_polymorphic_path([submission.problem]) %></td>
        <% if @layout != :single_contest %>
          <td><%= user_link(submission.user, submission.user.nickname) %></td>
        <% end %>
        <td id="time-<%= submission.id %>"><%= submission.total_time.to_i %></td>
        <td id="memory-<%= submission.id %>"><%= submission.total_memory.to_i %></td>
        <td id="verdict-<%= submission.id %>" class="<%= verdict_class_map[submission.result] %>"><%= submission.result %></td>
        <td><%= submission.compiler.name %></td>
        <td><%= number_to_human_size(submission.code_length) %></td>
        <td id="score-<%= submission.id %>"><%= sprintf("%g", submission.score) %></td>
        <td><%= submission.created_at.to_fs(:clean) %></td>
        <% if effective_admin? %>
          <td>
            <% if submission.problem.proxyjudge_none? %>
              <%= form_with url: rejudge_submission_path(submission) do |f| %>
                <%= f.submit 'Rejudge', class: 'btn btn-xs btn-primary' %>
              <% end %>
            <% end %>
          </td>
        <% end %>
      </tr>
    <% end %>
  </tbody>
</table>
<%= contest_adaptive_paginate @submissions %>

<% if not waiting_submissions.empty? %>
<script>
var verdict_class_map = <%= raw(verdict_class_map.to_json) %>;

initSubmissionCable();
$(document).ready(function() {
  subscribeSubmission(<%= raw(waiting_submissions.to_json) %>, updateMultipleSubmissions);
});
</script>
<% end %>
